Given a string A, find if there is any subsequence that repeats itself.

A subsequence of a string is defined as a sequence of characters generated by deleting some characters in the string without changing the order of the remaining characters.

NOTE : sub-sequence length should be greater than or equal to 2.



Input Format:

The first and the only argument of input contains a string A.
Output Format:

Return an integer, 0 or 1:
    => 0 : False
    => 1 : True
    
    
    
int Solution::anytwo(string A) {
    
    int n = A.length();
    int L[A.length() + 1][A.length() + 1];
    for(int i = 0; i <= A.length(); i++)
    {
        for(int j = 0; j <= A.length(); j++)
        {
            if(i == 0 || j == 0)
            {
                L[i][j] = 0;
                continue;
            }
            if(i == j)
            {
                L[i][j] = max(L[i - 1][j], L[i][j - 1]);
            }
            else
            {
                if(A[i - 1] == A[j - 1])
                {
                    L[i][j] = L[i - 1][j - 1] + 1;
                }
                else
                {
                    L[i][j] = max(L[i - 1][j], L[i][j - 1]);
                }
            }
        }
    }
    if(L[n][n] > 1)
        return 1;
    else
        return 0;
}
